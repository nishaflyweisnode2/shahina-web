{"version":3,"file":"static/js/219.e3a53e75.chunk.js","mappings":"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","sources":["components/giftCards/GiftCard.js"],"sourcesContent":["/** @format */\r\n\r\nimport { isArray } from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addGiftItem, getGiftCard } from \"../../Repository/Api\";\r\nimport { View_description } from \"../../Helper/Herlper\";\r\nimport { ImageLazyLoading } from \"../../utils/helpingComponent\";\r\n\r\nconst GiftCard = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [item, setItem] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isOther, setIsOther] = useState(false);\r\n  const [price, setPrice] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const quantity = 1;\r\n\r\n  useEffect(() => {\r\n    getGiftCard(setItem);\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const toggleSelectBox = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (value) => {\r\n    if (value.type === \"other\") {\r\n      setSelectedValue(\"Other\");\r\n      setIsOther(true);\r\n    } else {\r\n      setSelectedValue(value?.price);\r\n      setIsOther(false);\r\n    }\r\n    setId(value?._id);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  function BackNavigation() {\r\n    navigate(-1);\r\n  }\r\n\r\n  let payload;\r\n\r\n  if (isOther) {\r\n    payload = {\r\n      quantity,\r\n      email,\r\n      price,\r\n    };\r\n  } else {\r\n    payload = {\r\n      quantity,\r\n      email,\r\n    };\r\n  }\r\n\r\n  const submitHandler = () => {\r\n    dispatch(addGiftItem(id, payload, navigate));\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"instant\",\r\n    });\r\n  }, []);\r\n\r\n  function SelectedValue() {\r\n    if (selectedValue) {\r\n      if (selectedValue === \"Other\") {\r\n        return selectedValue;\r\n      } else {\r\n        return `$${selectedValue}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-20\">\r\n      {\" \"}\r\n      <div className=\"Backward_Heading step_Heading\">\r\n        <div>\r\n          <img src=\"/Image/1.png\" alt=\"\" onClick={() => BackNavigation()} />\r\n        </div>\r\n        <p className=\"title\">Gift Cards</p>\r\n      </div>\r\n      <div className=\"GiftCard_Container\" style={{ marginTop: \"40px\" }}>\r\n        {isArray(item) &&\r\n          item?.map((i, index) => (\r\n            <>\r\n              <div\r\n                className=\"w-[50rem] h-[22rem] mx-auto my-20 Img_Container\"\r\n                key={index}\r\n              >\r\n          \r\n\r\n                <ImageLazyLoading\r\n                  img={i?.image}\r\n                  alt={\"\"}\r\n                  className=\"gift_card_image\"\r\n                />\r\n              </div>\r\n              <div className=\"w-[50rem] mx-auto Img_Container\">\r\n                <h2\r\n                  className=\"text-4xl font-bold text-primary text_Title\"\r\n                  style={{ fontWeight: \"bold\" }}\r\n                >\r\n                  {i.name}\r\n                </h2>\r\n                <div className=\"mt-3 mb-4\" />\r\n                <View_description description={i.description} />\r\n                <div className=\"mt-3 mb-4\" />\r\n\r\n                <label\r\n                  className=\"font-bold flex flex-col\"\r\n                  style={{ fontSize: \"20px\", fontFamily: \"Poppins\" }}\r\n                >\r\n                  <div className=\"relative inline-block\">\r\n                    <div\r\n                      className=\"w-full border border-black py-5 px-12 flex items-center justify-between cursor-pointer\"\r\n                      onClick={toggleSelectBox}\r\n                    >\r\n                      <span> {SelectedValue()}</span>\r\n                      <img\r\n                        className={`w-7 h-7 transition-transform transform ${\r\n                          isOpen ? \"rotate-180\" : \"\"\r\n                        }`}\r\n                        src=\"/Image/77.png\"\r\n                        alt=\"arrow down\"\r\n                      />\r\n                    </div>\r\n                    {isOpen && (\r\n                      <div className=\"absolute bg-white  w-full mt-2 border space-y-4 border-black py-2 px-12 drop_values \">\r\n                        <div className=\"cursor-pointer text-3xl hover:bg-gray-300\"></div>\r\n                        {i?.priceArray?.map((item, index) => (\r\n                          <div\r\n                            key={`option${index}`}\r\n                            className=\"cursor-pointer text-2xl hover:bg-gray-300\"\r\n                            onClick={() => handleOptionClick(item)}\r\n                          >\r\n                            {item.type === \"other\"\r\n                              ? \"Other\"\r\n                              : `$${item.price} `}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </label>\r\n\r\n                <div>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"InputEmail\"\r\n                    placeholder=\"Enter email to send gift card\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                {isOther && (\r\n                  <div>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"InputEmail\"\r\n                      placeholder=\"Enter Amount\"\r\n                      onChange={(e) => {\r\n                        setPrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {selectedValue && (\r\n                  <div className=\"flex justify-center font-bold  items-center mt-16\">\r\n                    <div className=\"flex items-center gap-10\">\r\n                      <h3 className=\"text-2xl  text-mediumGray\">Price : </h3>\r\n                      <span className=\"text-2xl  text-black\">\r\n                        {selectedValue === \"Other\"\r\n                          ? `$${price}`\r\n                          : `$${selectedValue}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"flex justify-center mt-32\">\r\n                  <button\r\n                    className=\"text-darkSecondary text-1xl font-bold w-[31rem] bg-primary py-4 \"\r\n                    style={{ fontSize: \"24px\" }}\r\n                    onClick={() => submitHandler()}\r\n                  >\r\n                    PURCHASE NOW\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftCard;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","selectedValue","setSelectedValue","_useState5","_useState6","item","setItem","_useState7","_useState8","id","setId","_useState9","_useState10","email","setEmail","_useState11","_useState12","isOther","setIsOther","_useState13","_useState14","price","setPrice","dispatch","useDispatch","useEffect","getGiftCard","payload","navigate","useNavigate","toggleSelectBox","quantity","SelectedValue","concat","window","scrollTo","top","behavior","_jsxs","className","children","_jsx","src","alt","onClick","style","marginTop","isArray","map","i","index","_i$priceArray","_Fragment","ImageLazyLoading","img","image","fontWeight","name","View_description","description","fontSize","fontFamily","priceArray","value","type","_id","placeholder","onChange","e","target","addGiftItem"],"sourceRoot":""}